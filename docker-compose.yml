x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"
services:
  frontend:
    image: ghcr.io/vlizbe/vocabserver-frontend:${BUILD_TAG}
    restart: always
    logging: *default-logging
  identifier:
    ports:
      - 0.0.0.0:3033:80
    image: semtech/mu-identifier:1.10.1
    environment:
      SESSION_COOKIE_SECURE: "on"
      DEFAULT_ACCESS_CONTROL_ALLOW_ORIGIN_HEADER: "*"
    links:
      - dispatcher:dispatcher
    restart: always
    logging: *default-logging
  dispatcher:
    image: semtech/mu-dispatcher:2.1.0-beta.2
    links:
      - resource:resource
    volumes:
      - ./config/dispatcher:/config
    restart: always
    logging: *default-logging
  delta-notifier:
    image: semtech/mu-delta-notifier:0.4.0
    volumes:
      - ./config/delta:/config
    restart: always
    logging: *default-logging
  database:
    image: semtech/mu-authorization:0.6.0-beta.8
    environment:
      MU_SPARQL_ENDPOINT: "http://triplestore:8890/sparql"
    volumes:
      - ./config/authorization:/config
    networks:
      - default
      - ldes-consumers
    restart: always
    logging: *default-logging
  triplestore:
    image: redpencil/virtuoso:1.2.0-rc.1
    ports:
      - 8890:8890
    environment:
      SPARQL_UPDATE: "true"
      ENABLE_CORS: "*"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    volumes:
      - ./data/db:/data
      - ./config/virtuoso/virtuoso.ini:/data/virtuoso.ini
    restart: always
    logging: *default-logging
  migrations:
    image: semtech/mu-migrations-service:0.8.0
    links:
      - triplestore:database
    volumes:
      - ./config/migrations:/data/migrations
    restart: always
    logging: *default-logging
  file:
    image: semtech/mu-file-service:3.2.0
    environment:
      FILE_RESOURCE_BASE: "http://example-resource.com/files/"
    volumes:
      - ./data/files:/share
    restart: always
    logging: *default-logging  
  resource:
    image: semtech/mu-cl-resources:1.23.0
    links:
      - database:database
    volumes:
      - ./config/resources:/config
    restart: always
    logging: *default-logging
  search:
    image: semtech/mu-search:0.10.0-beta.5
    volumes:
      - ./config/search:/config
    restart: always
    logging: *default-logging
    environment:
      JAVA_OPTS: "-Xms1g -Xmx4g"    
  elasticsearch:
    image: semtech/mu-search-elastic-backend:1.0.0
    volumes:
      - ./data/elasticsearch/:/usr/share/elasticsearch/data
    ulimits:
      nproc: 65536
      nofile:
        soft: 65535
        hard: 65535
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx4g"
      - "cluster.routing.allocation.disk.watermark.low=96%"
      - "cluster.routing.allocation.disk.watermark.high=97%"
      - "cluster.routing.allocation.disk.watermark.flood_stage=98%"
    restart: always
    logging: *default-logging
  job-controller:
    image: lblod/job-controller-service:1.0.1
    volumes:
      - ./config/job-controller/:/config/
    environment:
      LOG_SPARQL_QUERIES: "true"
      LOG_SPARQL_UPDATES: "true"
    restart: always
    logging: *default-logging
  vocab-fetch:
    build:
      context: ./services/vocab-fetch
    image: ${REG_NS:-vocabserver_app}/vocab-fetch:${BUILD_TAG}
    volumes:
      - ./data/vocab-fetch:/share
    environment:
      MU_VIRTUOSO_ENDPOINT: "http://triplestore:8890/sparql"
      UPDATE_DATASET_DUMP_CRON_PATTERN: "5 * * * *" # hourly
      # FIXME: always run in dev mode to circumvent memory limitations
      MODE: "development"
    restart: always
    logging: *default-logging
  content-unification:
    build:
      context: ./services/content-unification
    image: ${REG_NS:-vocabserver_app}/content-unification:${BUILD_TAG:-latest}
    volumes:
      - ./data/vocab-fetch:/share
    environment:
      MU_SPARQL_ENDPOINT: "http://database:8890/sparql"
      MU_SPARQL_UPDATEPOINT:  "http://triplestore:8890/sparql"
      MU_AUTH_ENDPOINT: "http://database:8890/sparql"
      # FIXME: always run in dev mode to circumvent memory limitations
      MODE: "development"
    restart: always
    logging: *default-logging
  uuid-generation:
    image: kanselarij/uuid-generation-service:1.0.0
    volumes:
      - ./config/uuid-generation/:/config
    restart: always
    logging: *default-logging
  webcomponent:
    image: ghcr.io/vlizbe/vocabserver-webcomponent:${BUILD_TAG:-latest}
  ldes-consumer-manager:
    # TODO: use image that has both fix-duplicate-start AND compose project support
    image: redpencil/ldes-consumer-manager:feature-fix-duplicate-start
    environment:
      MU_NETWORK: ldes-consumers
      CONSUMER_IMAGE: redpencil/ldes-consumer:feature-consumer-status
      MODE: "${MODE:-production}"
      COMPOSE_PROJECT: "vocabserver-app"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
    logging: *default-logging
  vocab-configs:
    build:
      context: ./services/vocab-configs
    image: ${REG_NS:-vocabserver_app}/vocab-configs:${BUILD_TAG:-latest}
    environment:
      MU_APPLICATION_FILE_STORAGE_PATH: "vocab-configs/"
      MODE: "${MODE:-production}"
      MU_SPARQL_ENDPOINT: "http://database:8890/sparql"
      MU_SPARQL_DIRECT_UPDATEPOINT:  "http://triplestore:8890/sparql"
      MU_AUTH_ENDPOINT: "http://database:8890/sparql"
    volumes:
      - ./data/files:/share
  yasgui:
    # DEV purpose: debug built in triplestore
    image: redpencil/yasgui:latest
    environment:
      DEFAULT_SPARQL_ENDPOINT: "http://docker-dev:8890/sparql"
    # that should be in the setup script | same exposed port as graphdb
    ports:
      - 3034:80
networks:
  ldes-consumers:
    name: ldes-consumers
